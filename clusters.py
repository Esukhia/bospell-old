from resources.pybo.pybo.pybo import *

page = """[29a.1]རྨི་ལམ་ངན་པ་དང་། ལོག་འདྲེན་གྱི་གནོད་པ་ཐམས་ཅད་དང་། བྱད་དང་རོ་ལངས་ཐམས་ཅད་རབ་ཏུ་ཞི་བར་འགྱུར། གང་གིས་མཁས་པ་དག་ཁྲུས་བགྱིད་དུ་སྩལ་བའི་སྨན་དང་སྔགས་ནི་འདི་དག་སྟེ། ཤུ་དག་གིའུ་ཝང་འུ་སུ་དང་། །ཤ་མྱང་ཤ་མི་ཤི་རི་ཤ །དབང་
[29a.2]པོའི་ལག་དང་སྐལ་བ་ཆེ། །ཛྙ་མ་ཤིང་ཚ་ཨ་ག་རུ། །ཤི་རི་བེ་སྟ་སྲ་རྩི་དང་། །གུ་གུལ་ར་ས་ཤླ་ལ་ཀི། །རྡོ་དྲེག་ལོ་མ་རྒྱ་སྤོས་དང་། །ཙནྡན་དང་ནི་ལྡོང་རོས་དང་། །གི་ཝང་བཅས་དང་རུ་རྟ་དང་། །གུར་གུམ་གླ་སྒང་ཡུངས་ཀར་དང་། །སྦྱི་མོ་སུག་སྨེལ་ན་ལ་ད། །ནཱ་ག་གེ་
[29a.3]སར་ཨུ་ཤི་ར། །འདི་དག་ཆ་ནི་མཉམ་བགྱིས་ནས། །སྐར་མ་རྒྱལ་ལ་བཏགས་པར་བགྱི། །ཕྱེ་མ་ལ་ནི་སྔགས་ཚིག་འདི། །ལན་བརྒྱ་མངོན་པར་གདབ་པར་བགྱི། །ཏད་ཡ་ཐཱ། སུ་ཀྲྀ་ཏེ་ཀྲྀ་ཏ་ཀ་མ་ལ་ནཱི་ལ་ཛི་ན་ཀ་ར་ཏེ། ཧཾ་ཀ་རཱ་ཏེ། ཨིནྡྲ་ཛ་ལི། ཤ་ཀད་དྲེ་བ་ཤད་དྲེ། ཨ་བརྟ་ཀ་
[29a.4]སི་ཀེ། ན་ཀུ་ཏྲ་ཀུ། ཀ་བི་ལ་ཀ་བི་ལ་མ་ཏི། ཤཱི་ལ་མ་ཏི། སན་དྷི་དྷུ་དྷུ་མ་མ་བ་ཏི། ཤི་རི་ཤི་རི། ས་ཏྱ་སྠི་ཏེ་སྭཱ་ཧཱ། ལྕི་བས་དཀྱིལ་འཁོར་བགྱིས་ནས་ནི། །མེ་ཏོག་སིལ་མ་དགྲམ་པར་བགྱི། །གསེར་གྱི་སྣོད་དང་དངུལ་སྣོད་དུ། །མངར་བའི་ཁུ་བ་གཞག་པར་བགྱི། །སྐྱེས་བུ་གོ་ཆ་བགོས་པ་ནི། །བཞི་ཞིག་དེར་
[29a.5]ཡང་གཞག་པར་བགྱི། །རབ་ཏུ་བརྒྱན་པའི་བུ་མོ་བཞི། །བུམ་པ་ཐོགས་པ་གཞག་པར་བགྱི། །རྟག་ཏུ་གུ་གུལ་བདུག་པར་བགྱི། །སིལ་སྙན་སྣ་ལྔ་བགྱིད་དུ་སྩལ། །གདུགས་དང་རྒྱལ་མཚན་བ་དན་གྱིས། །ལྷ་མོ་དེ་ནི་ལེགས་པར་བརྒྱན། །བར་བར་དག་ཏུ་མེ་ལོང་གཞག །མདའ་དང་
[29a.6]མདུང་རྩེ་རྣ་བྲང་གཞག །དེ་ནས་མཚམས་ཀྱང་གཅད་པར་བགྱི། །དེ་ཡི་འོག་ཏུ་དགོས་པ་བརྩམ། །སྔགས་ཀྱི་ལས་ནི་འདི་དག་གིས། །མཚམས་བཅད་པ་ཡང་བརྩམ་པར་བགྱི། །སྱད་ཡ་ཐེ་དན། ཨ་ར་ཀེ །ན་ཡ་ནེ། ཧི་ལེ། མི་ལེ། གི་ལེ། ཁི་ཁི་ལེ་སྭཱ་ཧཱ། བཅོམ་
[29a.7]ལྡན་འདས་ཀྱི་སྣམ་ལོགས་སུ་ཁྲུས་བགྱིས་ནས་སྔགས་འདི་བཟླས་བརྗོད་བགྱིས་ན་ཁྲུས་ཀྱི་ཞི་བར་སྦྱོར་རོ། །ཏད་ཡ་ཐཱ། ས་ག་ཊེ། བི་ག་ཌེ། བི་ག་ཏ་བ་ཏི་སྭཱ་ཧཱ། ཕྱོགས་བཞི་དག་ན་གང་གནས་པའི། །རྒྱུ་སྐར་དག་གིས་ཚེ་སྲུངས་ཤིག །བཙས་པའི་སྐར་མའི་གནོད་པ་དང་། །"""

# a. instanciate the tokenizer
bs = BoSyl()  # used to dynamically generate affixed versions
trie = PyBoTrie(bs, profile='pytib')  # loads or builds a trie
tok = Tokenizer(trie)

# b. pre-process the input string
pre_processed = PyBoTextChunks(page)

# c. tokenize
tokens = tok.tokenize(pre_processed)

# regroup mono-syllabled tokens and punctuation tokens into clusters
single_syl_clusters = []
tmp = []
for token in tokens:
    if (token.syls and len(token.syls) == 1) or 'punct' in token.tag:
        tmp.append(token)
    else:
        if tmp:
            if len(tmp) == 1:
                single_syl_clusters.append(tmp[0])
            else:
                single_syl_clusters.append(tmp)
            tmp = []
        single_syl_clusters.append(token)

# print them
for elt in single_syl_clusters:
    if type(elt) == list:
        print('(({}))'.format('-'.join([token.content for token in elt])), end='')
    else:
        print(elt.content, end='')
# Loading Trie...
# Time: 1.5581333637237549
# [29a.1]རྨི་ལམ་ངན་པ་((དང་-།)) ལོག་འདྲེན་གྱི་གནོད་པ་ཐམས་ཅད་((དང་-།- བྱད་-དང་))རོ་ལངས་ཐམས་ཅད་རབ་ཏུ་ཞི་བར་((འགྱུར-།- གང་-གིས་))མཁས་པ་((དག་-ཁྲུས་-བགྱིད་))སྩལ་བའི་((སྨན་-དང་-སྔགས་-ནི་))འདི་དག་((སྟེ-།)) ཤུ་དག་((གིའུ་-ཝང་))འུ་སུ་((དང་-། -།-ཤ་-མྱང་-ཤ་-མི་-ཤི་-རི་-ཤ -།-དབང་))
# [29a.2]((པོའི་-ལག་-དང་))སྐལ་བ་((ཆེ-། -།))ཛྙ་མ་ཤིང་ཚ་((ཨ་-ག་-རུ-། -།-ཤི་-རི་-བེ་))སྲ་རྩི་((དང་-། -།))གུ་གུལ་ར་ས་ཤླ་ལ་((ཀི-། -།))རྡོ་དྲེག་ལོ་མ་རྒྱ་སྤོས་((དང་-། -།-ཙནྡན་-དང་-ནི་))ལྡོང་རོས་((དང་-། -།))གི་ཝང་བཅས་དང་རུ་((རྟ་-དང་-། -།))གུར་གུམ་གླ་སྒང་ཡུངས་ཀར་((དང་-། -།))སྦྱི་མོ་སུག་སྨེལ་ན་ལ་ད((། -།))ནཱ་ག་((གེ་-སར་-ཨུ་-ར-། -།))འདི་དག་((ཆ་-ནི་-མཉམ་-བགྱིས་-ནས-། -།))སྐར་མ་རྒྱལ་ལ་བཏགས་((པར་-བགྱི-། -།))ཕྱེ་མ་((ལ་-ནི་-སྔགས་-ཚིག་-འདི-། -།-ལན་-བརྒྱ་))མངོན་པར་གདབ་པར་((བགྱི-། -།-ཏད་-ཡ་-ཐཱ-།- སུ་-ཀྲྀ་-ཏེ་-ཀྲྀ་-ཏ་))ཀ་མ་ལ་((ནཱི་-ལ་))ཛི་ན་ཀ་ར་((ཏེ-།- ཧཾ་-ཀ་-རཱ་-།- ཨིནྡྲ་-ཛ་-ལི-།- ཤ་-ཀད་-དྲེ་-བ་-ཤད་-དྲེ-།- ཨ་-བརྟ་))
# [29a.4]((སི་-ཀེ-།- ན་-ཀུ་-ཀུ- ཀ་-བི་-ཀ་-བི་))མ་ཏི((།- ཤཱི་))ལ་མ་((ཏི- སན་-དྷི་-དྷུ་-དྷུ་))མ་མ་((བ་-ཏི- ཤི་-རི་-ཤི་-རི-།- ས་-ཏྱ་-སྠི་-ཏེ་-སྭཱ་-ཧཱ-།)) ལྕི་བས་དཀྱིལ་འཁོར་((བགྱིས་-ནས་-ནི-། -།))མེ་ཏོག་སིལ་མ་དགྲམ་པར་((བགྱི-། -།-གསེར་-གྱི་-སྣོད་-དང་-དངུལ་-སྣོད་-དུ-། -།-མངར་-བའི་))ཁུ་བ་((གཞག་-པར་-བགྱི-། -།))སྐྱེས་བུ་གོ་ཆ་བགོས་པ་((ནི-། -།-བཞི་-ཞིག་-དེར་))
# [29a.5]((ཡང་-གཞག་-པར་-བགྱི-། -།))རབ་ཏུ་བརྒྱན་པའི་བུ་མོ་((བཞི-། -།))བུམ་པ་ཐོགས་པ་((གཞག་-པར་-བགྱི-། -།-རྟག་-ཏུ་))གུ་གུལ་((བདུག་-པར་-བགྱི-། -།))སིལ་སྙན་((སྣ་-ལྔ་-བགྱིད་-སྩལ-། -།-གདུགས་-དང་))རྒྱལ་མཚན་བ་དན་((གྱིས-། -།))ལྷ་མོ་((དེ་-ནི་))ལེགས་པར་((བརྒྱན-། -།))བར་བར་((དག་-ཏུ་))མེ་ལོང་((གཞག -།-མདའ་-དང་))
# [29a.6]མདུང་རྩེ་((རྣ་-བྲང་-གཞག -།))དེ་ནས་((མཚམས་-ཀྱང་))གཅད་པར་((བགྱི-། -།-དེ་-ཡི་-འོག་-ཏུ་))དགོས་པ་((བརྩམ-། -།-སྔགས་-ཀྱི་-ལས་-ནི་))འདི་དག་((གིས-། -།-མཚམས་))བཅད་པ་ཡང་བརྩམ་པར་((བགྱི-། -།-སྱད་-ཡ་-ཐེ་-།)) ཨ་ར་((ཀེ -།-ན་-ཡ་-ནེ- ཧི་-ལེ-།- མི་-ལེ-།- གི་-ལེ-།- ཁི་-ལེ་-སྭཱ་-ཧཱ-།- བཅོམ་))
# [29a.7]((ལྡན་-འདས་-ཀྱི་))སྣམ་ལོགས་((སུ་-ཁྲུས་-བགྱིས་-ནས་-སྔགས་-འདི་))བཟླས་བརྗོད་((བགྱིས་-ན་-ཁྲུས་-ཀྱི་))ཞི་བར་((སྦྱོར་-རོ-། -།-ཏད་-ཡ་-ཐཱ-།)) ས་ག་((ཊེ-།- བི་-ཌེ-།- བི་-ཏ་-བ་-ཏི་-ཧཱ-།- ཕྱོགས་-བཞི་-དག་-ན་-གང་))གནས་པའི((། -།))རྒྱུ་སྐར་((དག་-གིས་-ཚེ་-སྲུངས་-ཤིག -།))བཙས་པའི་སྐར་མའི་གནོད་པ་
# Process finished with exit code 0


